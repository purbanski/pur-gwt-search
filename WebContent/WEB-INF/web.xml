<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>
	<!--
	<filter>
		<filter-name>guiceFilter</filter-name>
		<filter-class>com.google.inject.servlet.GuiceFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>guiceFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


		This Guice listener hijacks all further filters and servlets. Extra
		filters and servlets have to be configured in your
		ServletModule#configureServlets() by calling
		serve(String).with(Class<? extends HttpServlet>) and
		filter(String).through(Class<? extends Filter)
	
	<listener>
		<listener-class>com.gwtplatform.samples.basic.server.MyGuiceServletContextListener
		</listener-class>
	</listener>
-->
    <!-- Default page to serve -->
    <welcome-file-list>
        <welcome-file>Gwtpsample.html</welcome-file>
    </welcome-file-list>
<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- <servlet> -->
	<!-- <servlet-name>index</servlet-name> -->
	<!-- <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> -->
	<!-- <load-on-startup>1</load-on-startup> -->
	<!-- </servlet> -->
	<!-- <servlet-mapping> -->
	<!-- <servlet-name>index</servlet-name> -->
	<!-- <url-pattern>/index/*</url-pattern> -->
	<!-- </servlet-mapping> -->


	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/data/*</url-pattern>
	</servlet-mapping>

</web-app>
